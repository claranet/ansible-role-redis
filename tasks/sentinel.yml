---
- name: Sentinel | Mask redis-sentinel service
  ansible.builtin.systemd:
    name: redis-sentinel.service
    masked: true

- name: Sentinel | Create Sentinel Log directory
  ansible.builtin.file:
    path: "{{ redis_sentinel_logdir }}"
    owner: redis
    group: redis
    # same mode than /var/log/redis/
    # created by the official redis-server package
    mode: 02750
    state: directory

- name: Sentinel | Create Sentinel Data directory
  ansible.builtin.file:
    path: "{{ redis_sentinel_databases_dir }}"
    owner: redis
    group: redis
    mode: 0750
    state: directory

- name: Sentinel | Create systemd unit file for redis
  ansible.builtin.template:
    src: etc/systemd/system/redis-sentinel@.service.j2
    dest: /etc/systemd/system/redis-sentinel@{{ redis_sentinel_port }}.service
    owner: root
    group: root
    mode: 0440
  register: _redis_sentinel_service

- name: Sentinel | Delete default sentinel configuration file
  ansible.builtin.file:
    path: /etc/redis/sentinel.conf
    state: absent

- name: Sentinel | Check config rewriten by SENTINEL
  ansible.builtin.lineinfile:
    path: /etc/redis/sentinel_{{ redis_sentinel_port }}.conf
    line: "# Generated by CONFIG REWRITE"
    state: absent
  check_mode: true
  changed_when: false
  register: _redis_sentinel_config_rewrite

- name: Sentinel | Configure redis-sentinel first time install
  ansible.builtin.template:
    src: etc/redis/sentinel.conf.j2
    dest: /etc/redis/sentinel_{{ redis_sentinel_port }}.conf
    owner: redis
    group: redis
    mode: 0640
  notify: Redis-sentinel restart
  when: >-
    _redis_sentinel_config_rewrite.found is not defined
    or
    _redis_sentinel_config_rewrite.found != 1

- name: Sentinel | ensure redis-sentinel config is set
  notify: Redis-sentinel restart
  when: >-
    _redis_sentinel_config_rewrite.found is defined
    and
    _redis_sentinel_config_rewrite.found == 1
  block:
    - name: Sentinel | ensure redis-sentinel general config is set
      ansible.builtin.lineinfile:
        dest: /etc/redis/sentinel_{{ redis_sentinel_port }}.conf
        line: "{{ item.key }} {{ item.value }}"
        regexp: "^{{ item.key }}"
      loop: "{{ _redis_sentinel_conf_final | dict2items }}"

    - name: Sentinel | ensure redis-sentinel sentinel config is set
      ansible.builtin.lineinfile:
        dest: /etc/redis/sentinel_{{ redis_sentinel_port }}.conf
        line: "sentinel {{ item.key }} {{ item.value }}"
        regexp: "^sentinel {{ item.key }}"
      loop: "{{ _redis_sentinel_sentinel_conf_final | dict2items }}"

    - name: Sentinel | ensure redis-sentinel master config is set
      ansible.builtin.lineinfile:
        dest: /etc/redis/sentinel_{{ redis_sentinel_port }}.conf
        line: "sentinel {{ item.key }} {{ redis_sentinel_master_name }} {{ item.value }}"
        regexp: "^sentinel {{ item.key }} {{ redis_sentinel_master_name }}"
      loop: "{{ _redis_sentinel_master_conf_final | dict2items }}"

- name: Sentinel | Activate redis-sentinel service
  ansible.builtin.systemd:
    name: redis-sentinel@{{ redis_sentinel_port }}.service
    masked: false
    state: started
    enabled: true
    daemon_reload: "{{ _redis_sentinel_service is changed }}"
  register: _systemctl_start_redis_sentinel_

- name: Sentinel | set replica with password
  community.general.redis:
    command: replica
    master_host: "{{ _redis_master_ip }}"
    master_port: "{{ redis_server_port }}"
    login_host: "{{ _redis_conf_final.bind }}"
    login_port: "{{ redis_server_port }}"
    login_password: "{{ redis_server_password }}"
  when: redis_server_password is defined and redis_role == "replica"

- name: Sentinel | set master with password
  community.general.redis:
    command: replica
    replica_mode: master
    master_host: "{{ _redis_master_ip }}"
    master_port: "{{ redis_server_port }}"
    login_host: "{{ _redis_conf_final.bind }}"
    login_port: "{{ redis_server_port }}"
    login_password: "{{ redis_server_password }}"
  when: redis_server_password is defined and redis_role == "master"

- name: Sentinel | set replica without password
  community.general.redis:
    command: replica
    master_host: "{{ _redis_master_ip }}"
    master_port: "{{ redis_server_port }}"
    login_host: "{{ _redis_conf_final.bind }}"
    login_port: "{{ redis_server_port }}"
  when: redis_role == "replica"

- name: Sentinel | set master without password
  community.general.redis:
    command: replica
    replica_mode: master
    master_host: "{{ _redis_master_ip }}"
    master_port: "{{ redis_server_port }}"
    login_host: "{{ _redis_conf_final.bind }}"
    login_port: "{{ redis_server_port }}"
  when: redis_role == "master"
